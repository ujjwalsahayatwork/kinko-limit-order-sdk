{"version":3,"file":"limit-order-sdk.cjs.development.js","sources":["../src/constants.ts","../src/types.ts","../src/eip712.ts","../src/enums.ts","../src/limitorder.ts"],"sourcesContent":["import { AddressMap, ChainId } from '@sushiswap/core-sdk'\n\nexport const LAMBDA_URL = 'https://limit-order-ffo5rqmjnq-uc.a.run.app'\n\nexport const SOCKET_URL = 'wss://limit-order-ffo5rqmjnq-uc.a.run.app'\n\nexport const STOP_LIMIT_ORDER_ADDRESS: AddressMap = {\n  [ChainId.KOVAN]: '0xce9365dB1C99897f04B3923C03ba9a5f80E8DB87',\n  [ChainId.MATIC]: '0x1aDb3Bd86bb01797667eC382a0BC6A9854b4005f',\n  [ChainId.AVALANCHE]: '0xf6f9c9DB78AF5791A296c4bF34d59E0236E990E0',\n  [ChainId.FANTOM]: '0x0dd184Bec9e43701F76d75D5FFfE246B2DC8d4EA',\n  [ChainId.ETHEREUM]: '0x104734Ce12567421aC7B562e03Be2D75522cd112',\n  [ChainId.BSC_TESTNET]: '0x0bbDC097338f2D3B77f9440CB4Dc49f0905be86f',\n\n}\n\nexport const DEFAULT_RECEIVER_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0x8C6b2e5B8028825d371E1264f57C5CcaE0fa4D65',\n  [ChainId.AVALANCHE]: '0x042c99C84b00f11A08a07AA9752E083261083A57',\n  [ChainId.FANTOM]: '0x7a4f6a6Ca48Bf63C53DfF622bfa8E0DbA1c7A8c6',\n  [ChainId.ETHEREUM]: '0xf4943f2dEc7E4914067CdF4120E8A322bc8f5a36',\n  [ChainId.BSC_TESTNET]: '0x67Ba2cBb913243cc44747f8429FA072be3078BD5',\n\n}\n\nexport const ADVANCED_RECEIVER_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0xAA6370CD78A61D4e72911268D84bF1Ea6a976b77',\n  [ChainId.AVALANCHE]: '0x50995361A1104B2E34d81771B2cf19BA55051C7c',\n  [ChainId.FANTOM]: '0x506e3ce419976E91F2ca5BDAB96Ef253Df9dAD3b',\n  [ChainId.ETHEREUM]: '0xA32e906C31093aDbe581B913e549f70fD2fD7969',\n  [ChainId.BSC_TESTNET]: '0x28128508C11289D3e43B72A8dFE8a678a13B96cA',\n\n}\n\nexport const LIMIT_ORDER_HELPER_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0xe2f736B7d1f6071124CBb5FC23E93d141CD24E12',\n  [ChainId.AVALANCHE]: '0x889ec9e19C1598358899fCA4879011686c3d4045',\n  [ChainId.FANTOM]: '0xBf28dD7C3B863eae035eBf535B1B214070E8ddBf',\n  [ChainId.ETHEREUM]: '0x75a5263bddD871E94188611f3563aabc833Cc005',\n  [ChainId.BSC_TESTNET]: '0xF7A11b638E788e64A0473E2b905bb270B1B22715',\n\n}\n\nexport const ROUND_UP_RECEIVER_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0x1C9B033F8C46C08EbE67F15924F5B9E97e36E0a7',\n}\n","export const types = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' },\n  ],\n  LimitOrder: [\n    { name: 'maker', type: 'address' },\n    { name: 'tokenIn', type: 'address' },\n    { name: 'tokenOut', type: 'address' },\n    { name: 'amountIn', type: 'uint256' },\n    { name: 'amountOut', type: 'uint256' },\n    { name: 'recipient', type: 'address' },\n    { name: 'startTime', type: 'uint256' },\n    { name: 'endTime', type: 'uint256' },\n    { name: 'stopPrice', type: 'uint256' },\n    { name: 'oracleAddress', type: 'address' },\n    { name: 'oracleData', type: 'bytes32' },\n  ],\n}\n\nexport const bentoTypes = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' },\n  ],\n  SetMasterContractApproval: [\n    { name: 'warning', type: 'string' },\n    { name: 'user', type: 'address' },\n    { name: 'masterContract', type: 'address' },\n    { name: 'approved', type: 'bool' },\n    { name: 'nonce', type: 'uint256' },\n  ],\n}\nexport const name = 'LimitOrder'\n","import { BENTOBOX_ADDRESS, ChainId } from '@sushiswap/core-sdk'\nimport { bentoTypes, name, types } from './types'\n\nimport { STOP_LIMIT_ORDER_ADDRESS } from './constants'\nimport { SigningKey } from '@ethersproject/signing-key'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { getMessage } from 'eip-712'\nimport { splitSignature } from '@ethersproject/bytes'\n\nexport interface Domain {\n  name: string\n  chainId: ChainId\n  verifyingContract: string\n}\n\nexport interface Message {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string\n  endTime: string\n  stopPrice: string\n  oracleAddress: string\n  oracleData: string\n}\n\nexport interface BentoApprovalMessage {\n  warning: string\n  user: string\n  masterContract: string\n  approved: boolean\n  nonce: number\n}\n\nexport const getSignature = (message: Message, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId],\n  }\n  return sign({ types, primaryType: 'LimitOrder', domain, message }, privateKey)\n}\n\nexport const getTypedData = (message: Message, chainId: ChainId) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId],\n  }\n  return { types, primaryType: 'LimitOrder', domain, message }\n}\n\nexport const getTypedDataBento = (message: BentoApprovalMessage, chainId: ChainId) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId],\n  }\n  return {\n    types: bentoTypes,\n    primaryType: 'SetMasterContractApproval',\n    domain,\n    message,\n  }\n}\n\nexport const getTypeHash = (typedData: any) => {\n  let message = getMessage(typedData, true).toString('hex')\n  return `0x${message}`\n}\n\nconst sign = (typedData: any, privateKey: string) => {\n  let message = getMessage(typedData, true)\n  const signingKey = new SigningKey(privateKey)\n  const { v, r, s } = signingKey.signDigest(message)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProvider = async (\n  message: Message,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedData(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.maker, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProviderBentobox = async (\n  message: BentoApprovalMessage,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedDataBento(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.user, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureBento = async (bentoApproval: BentoApprovalMessage, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId],\n  }\n  return sign(\n    {\n      types: bentoTypes,\n      primaryType: 'SetMasterContractApproval',\n      domain,\n      message: bentoApproval,\n    },\n    privateKey\n  )\n}\n","export enum OrderStatus {\n  FILLED = 'FILLED',\n  CANCELLED = 'CANCELLED',\n  EXPIRED = 'EXPIRED',\n  PENDING = 'PENDING',\n}\n","import { ChainId, CurrencyAmount, Price, Token, validateAndParseAddress } from '@sushiswap/core-sdk'\nimport { LAMBDA_URL, STOP_LIMIT_ORDER_ADDRESS } from './constants'\nimport { Message, getSignature, getSignatureWithProvider, getTypeHash, getTypedData } from './eip712'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { NonceManager } from '@ethersproject/experimental'\nimport { Signer } from '@ethersproject/abstract-signer'\nimport { Transaction } from '@ethersproject/transactions'\nimport { Web3Provider } from '@ethersproject/providers'\nimport abi from './abis/stop-limit-order.json'\nimport { defaultAbiCoder } from '@ethersproject/abi'\nimport fetch from 'isomorphic-unfetch'\nimport { keccak256 } from '@ethersproject/solidity'\n\nexport interface ILimitOrderData {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  tokenInDecimals: number\n  tokenOutDecimals: number\n  tokenInSymbol: string\n  tokenOutSymbol: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string | number\n  endTime: string | number\n  stopPrice?: string\n  oracleAddress?: string\n  oracleData?: string\n  v: number\n  r: string\n  s: string\n  chainId: ChainId\n  orderTypeHash?: string\n}\n\nexport class LimitOrder {\n  public readonly maker: string\n  public readonly amountIn: CurrencyAmount<Token>\n  public readonly amountOut: CurrencyAmount<Token>\n  public readonly recipient: string\n  public readonly startTime: string\n  public readonly endTime: string\n  public readonly stopPrice: string\n  public readonly oracleAddress: string\n  public readonly oracleData: string\n  public v: number\n  public r: string\n  public s: string\n\n  static getLimitOrder(data: ILimitOrderData): LimitOrder {\n    return new LimitOrder(\n      data.maker,\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenIn, data.tokenInDecimals, data.tokenInSymbol),\n        data.amountIn\n      ),\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenOut, data.tokenOutDecimals, data.tokenOutSymbol),\n        data.amountOut\n      ),\n      data.recipient,\n      data.startTime,\n      data.endTime,\n      data.stopPrice,\n      data.oracleAddress,\n      data.oracleData,\n      data.v,\n      data.r,\n      data.s\n    )\n  }\n\n  constructor(\n    maker: string,\n    amountIn: CurrencyAmount<Token>,\n    amountOut: CurrencyAmount<Token>,\n    recipient: string,\n    startTime: string | number,\n    endTime: string | number,\n    stopPrice = '0',\n    oracleAddress = '0x0000000000000000000000000000000000000000',\n    oracleData = '0x00000000000000000000000000000000000000000000000000000000000000',\n    v = 0,\n    r = '',\n    s = ''\n  ) {\n    this.maker = validateAndParseAddress(maker)\n    this.amountIn = amountIn\n    this.amountOut = amountOut\n    this.recipient = validateAndParseAddress(recipient)\n    this.startTime = startTime.toString()\n    this.endTime = endTime.toString()\n    this.stopPrice = stopPrice\n    this.oracleAddress = validateAndParseAddress(oracleAddress)\n    this.oracleData = oracleData\n    this.v = v\n    this.r = r\n    this.s = s\n  }\n\n  get amountInRaw(): string {\n    return this.amountIn.quotient.toString()\n  }\n\n  get amountOutRaw(): string {\n    return this.amountOut.quotient.toString()\n  }\n\n  get tokenInAddress(): string {\n    return this.amountIn.currency.address\n  }\n\n  get tokenOutAddress(): string {\n    return this.amountOut.currency.address\n  }\n\n  get tokenInDecimals(): number {\n    return this.amountIn.currency.decimals\n  }\n\n  get tokenOutDecimals(): number {\n    return this.amountOut.currency.decimals\n  }\n\n  get tokenInSymbol(): string {\n    return this.amountIn.currency.symbol || ''\n  }\n\n  get tokenOutSymbol(): string {\n    return this.amountOut.currency.symbol || ''\n  }\n\n  get chainId(): ChainId {\n    return this.amountIn.currency.chainId\n  }\n\n  usePrice(price: Price<Token, Token>): LimitOrder {\n    return new LimitOrder(\n      this.maker,\n      this.amountIn,\n      CurrencyAmount.fromRawAmount(this.amountOut.currency, price.quote(this.amountIn).quotient.toString()),\n      this.recipient,\n      this.startTime,\n      this.endTime,\n      this.stopPrice,\n      this.oracleAddress,\n      this.oracleData\n    )\n  }\n\n  signdOrderWithPrivatekey(chainId: ChainId, privateKey: string) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData]),\n    }\n\n    const { v, r, s } = getSignature(order, chainId, privateKey)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  async signOrderWithProvider(chainId: ChainId, provider: Web3Provider) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData]),\n    }\n\n    const { v, r, s } = await getSignatureWithProvider(order, chainId, provider)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  getTypedData() {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData]),\n    }\n\n    return getTypedData(order, this.chainId)\n  }\n\n  getTypeHash() {\n    let typedData = this.getTypedData()\n    let digest = getTypeHash(typedData)\n    return digest\n  }\n\n  async send() {\n    const resp = await fetch(`${LAMBDA_URL}/orders/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        maker: this.maker,\n        tokenIn: this.tokenInAddress,\n        tokenOut: this.tokenOutAddress,\n        tokenInDecimals: this.tokenInDecimals,\n        tokenOutDecimals: this.tokenOutDecimals,\n        tokenInSymbol: this.tokenInSymbol,\n        tokenOutSymbol: this.tokenOutSymbol,\n        amountIn: this.amountInRaw,\n        amountOut: this.amountOutRaw,\n        recipient: this.recipient,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        stopPrice: this.stopPrice,\n        oracleAddress: this.oracleAddress,\n        oracleData: this.oracleData,\n        v: this.v,\n        r: this.r,\n        s: this.s,\n        chainId: this.amountIn.currency.chainId,\n      }),\n    })\n\n    return resp.json()\n  }\n}\n\nexport class FillLimitOrder {\n  public readonly order: LimitOrder\n  public readonly path: string[]\n  public readonly amountExternal: BigNumber\n  public readonly amountToFill: BigNumber\n  public readonly limitOrderReceiver: string\n  public readonly to: string\n  public readonly tokenIn: string\n  public readonly tokenOut: string\n  public readonly limitOrderReceiverData: string\n\n  constructor(\n    order: LimitOrder,\n    path: string[],\n    amountExternal: BigNumber,\n    amountToFill: BigNumber,\n    limitOrderReceiver: string,\n    to: string,\n    keepTokenIn = false\n  ) {\n    this.order = order\n    this.path = path.map(validateAndParseAddress)\n    this.amountExternal = amountExternal\n    this.amountToFill = amountToFill\n    this.limitOrderReceiver = validateAndParseAddress(limitOrderReceiver)\n    this.to = validateAndParseAddress(to)\n    this.tokenIn = order.amountIn.currency.address\n    this.tokenOut = order.amountOut.currency.address\n\n    this.limitOrderReceiverData = defaultAbiCoder.encode(\n      ['address[]', 'uint256', 'address', 'bool'],\n      [this.path, this.amountExternal.toString(), this.to, keepTokenIn]\n    )\n  }\n\n  public fillOrderOpen(\n    signer: Signer,\n    extra: {\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      nonce?: number\n      debug?: boolean\n      open?: boolean\n    }\n  ) {\n    extra.open = true\n    return this.fillOrder(signer, extra)\n  }\n\n  public async fillOrder(\n    signer: Signer | NonceManager,\n    extra: {\n      debug?: boolean\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      open?: boolean\n      nonce?: number\n    }\n  ): Promise<{ executed: boolean; transaction?: Transaction }> {\n    const { gasPrice, nonce, forceExecution = false, open = false } = extra\n\n    const func = open ? 'fillOrderOpen' : 'fillOrder'\n\n    const orderArg = [\n      this.order.maker,\n      this.order.amountInRaw,\n      this.order.amountOutRaw,\n      this.order.recipient,\n      this.order.startTime,\n      this.order.endTime,\n      this.order.stopPrice,\n      this.order.oracleAddress,\n      this.order.oracleData,\n      this.amountToFill.toString(),\n      this.order.v,\n      this.order.r,\n      this.order.s,\n    ]\n\n    const limitOrderContract = new Contract(STOP_LIMIT_ORDER_ADDRESS[this.order.chainId], abi, signer)\n\n    let gasLimit\n    let executed = true\n\n    if (extra.debug) console.log(orderArg, this.path, this.limitOrderReceiver, this.limitOrderReceiverData)\n\n    try {\n      gasLimit = await limitOrderContract.estimateGas[func](\n        orderArg,\n        this.path[0],\n        this.path[this.path.length - 1],\n        this.limitOrderReceiver,\n        this.limitOrderReceiverData\n      )\n      gasLimit = gasLimit.mul(11).div(10)\n    } catch (e) {\n      if (forceExecution) {\n        console.log('Failed to estimate gas, forcing execution')\n        gasLimit = BigNumber.from('400000') // 400k\n        executed = true\n      } else {\n        return { executed: false }\n      }\n    }\n\n    const transaction: Transaction = await limitOrderContract.fillOrder(\n      orderArg,\n      this.path[0],\n      this.path[this.path.length - 1],\n      this.limitOrderReceiver,\n      this.limitOrderReceiverData,\n      { gasLimit, gasPrice, nonce }\n    )\n\n    return { executed, transaction }\n  }\n}\n"],"names":["LAMBDA_URL","SOCKET_URL","STOP_LIMIT_ORDER_ADDRESS","ChainId","KOVAN","MATIC","AVALANCHE","FANTOM","ETHEREUM","BSC_TESTNET","DEFAULT_RECEIVER_ADDRESS","ADVANCED_RECEIVER_ADDRESS","LIMIT_ORDER_HELPER_ADDRESS","ROUND_UP_RECEIVER_ADDRESS","types","EIP712Domain","name","type","LimitOrder","bentoTypes","SetMasterContractApproval","getSignature","message","chainId","privateKey","domain","verifyingContract","sign","primaryType","getTypedData","getTypedDataBento","BENTOBOX_ADDRESS","getTypeHash","typedData","getMessage","toString","signingKey","SigningKey","signDigest","v","r","s","getSignatureWithProvider","provider","send","maker","JSON","stringify","signature","splitSignature","getSignatureWithProviderBentobox","user","getSignatureBento","bentoApproval","OrderStatus","amountIn","amountOut","recipient","startTime","endTime","stopPrice","oracleAddress","oracleData","validateAndParseAddress","getLimitOrder","data","CurrencyAmount","fromRawAmount","Token","tokenIn","tokenInDecimals","tokenInSymbol","tokenOut","tokenOutDecimals","tokenOutSymbol","usePrice","price","currency","quote","quotient","signdOrderWithPrivatekey","order","tokenInAddress","tokenOutAddress","amountInRaw","amountOutRaw","keccak256","signOrderWithProvider","digest","fetch","method","headers","body","resp","json","address","decimals","symbol","FillLimitOrder","path","amountExternal","amountToFill","limitOrderReceiver","to","keepTokenIn","map","limitOrderReceiverData","defaultAbiCoder","encode","fillOrderOpen","signer","extra","open","fillOrder","gasPrice","nonce","forceExecution","func","orderArg","limitOrderContract","Contract","abi","executed","debug","console","log","estimateGas","length","gasLimit","mul","div","BigNumber","from","transaction"],"mappings":"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"}